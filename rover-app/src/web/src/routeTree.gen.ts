/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes
import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'

// Create Virtual Routes

const AppSettingsServerInfoLazyImport = createFileRoute(
  '/_app/settings/server-info',
)()
const AppFleetAircraftsLazyImport = createFileRoute('/_app/fleet/aircrafts')()
const AppAccountProfileLazyImport = createFileRoute('/_app/account/profile')()
const AppSettingsUsersIndexLazyImport = createFileRoute(
  '/_app/settings/users/',
)()
const AppSettingsRolesIndexLazyImport = createFileRoute(
  '/_app/settings/roles/',
)()
const AppSettingsEnumsIndexLazyImport = createFileRoute(
  '/_app/settings/enums/',
)()
const AppSettingsConfigsIndexLazyImport = createFileRoute(
  '/_app/settings/configs/',
)()
const AppAnalysisMapIndexLazyImport = createFileRoute('/_app/analysis/map/')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsServerInfoLazyRoute = AppSettingsServerInfoLazyImport.update({
  path: '/settings/server-info',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/server-info.lazy').then((d) => d.Route),
)

const AppFleetAircraftsLazyRoute = AppFleetAircraftsLazyImport.update({
  path: '/fleet/aircrafts',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
    import('./routes/_app/fleet/aircrafts.lazy').then((d) => d.Route),
)

const AppAccountProfileLazyRoute = AppAccountProfileLazyImport.update({
  path: '/account/profile',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/account/profile.lazy').then((d) => d.Route),
)

const AppSettingsUsersIndexLazyRoute = AppSettingsUsersIndexLazyImport.update({
  path: '/settings/users/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/users/index.lazy').then((d) => d.Route),
)

const AppSettingsRolesIndexLazyRoute = AppSettingsRolesIndexLazyImport.update({
  path: '/settings/roles/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/roles/index.lazy').then((d) => d.Route),
)

const AppSettingsEnumsIndexLazyRoute = AppSettingsEnumsIndexLazyImport.update({
  path: '/settings/enums/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/enums/index.lazy').then((d) => d.Route),
)

const AppSettingsConfigsIndexLazyRoute =
  AppSettingsConfigsIndexLazyImport.update({
    path: '/settings/configs/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/settings/configs/index.lazy').then((d) => d.Route),
  )

const AppAnalysisMapIndexLazyRoute = AppAnalysisMapIndexLazyImport.update({
  path: '/analysis/map/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
    import('./routes/_app/analysis/map/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/account/profile': {
      preLoaderRoute: typeof AppAccountProfileLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/fleet/aircrafts': {
      preLoaderRoute: typeof AppFleetAircraftsLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/server-info': {
      preLoaderRoute: typeof AppSettingsServerInfoLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/analysis/map/': {
      preLoaderRoute: typeof AppAnalysisMapIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/configs/': {
      preLoaderRoute: typeof AppSettingsConfigsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/enums/': {
      preLoaderRoute: typeof AppSettingsEnumsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/roles/': {
      preLoaderRoute: typeof AppSettingsRolesIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/users/': {
      preLoaderRoute: typeof AppSettingsUsersIndexLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AppRoute.addChildren([
    AppIndexRoute,
    AppAccountProfileLazyRoute,
    AppFleetAircraftsLazyRoute,
    AppSettingsServerInfoLazyRoute,
    AppAnalysisMapIndexLazyRoute,
    AppSettingsConfigsIndexLazyRoute,
    AppSettingsEnumsIndexLazyRoute,
    AppSettingsRolesIndexLazyRoute,
    AppSettingsUsersIndexLazyRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
